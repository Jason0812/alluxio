diff --git a/core/client/src/main/java/alluxio/client/file/BaseFileSystem.java b/core/client/src/main/java/alluxio/client/file/BaseFileSystem.java
index 7c56bad..31334c6 100644
--- a/core/client/src/main/java/alluxio/client/file/BaseFileSystem.java
+++ b/core/client/src/main/java/alluxio/client/file/BaseFileSystem.java
@@ -235,10 +235,10 @@ public class BaseFileSystem implements FileSystem {
   }
 
   @Override
-  public List<MountPairInfo> getMountTable() throws IOException, AlluxioException{
+  public List<MountPairInfo> getMountPoint() throws IOException, AlluxioException{
     FileSystemMasterClient masterClient = mFileSystemContext.acquireMasterClient();
     try{
-      return masterClient.listMountPoint();
+      return masterClient.getMountPoint();
     }catch(IOException e){
       throw e;
     }finally{
@@ -318,11 +318,11 @@ public class BaseFileSystem implements FileSystem {
     }
   }
   @Override
-  public MountPairInfo getUfsPathWithMountTable(AlluxioURI path)
+  public MountPairInfo getMountPointWithPath(AlluxioURI path)
       throws IOException,AlluxioException{
     FileSystemMasterClient masterClient = mFileSystemContext.acquireMasterClient();
     try{
-      return masterClient.getUfsPathWithMountTable(path);
+      return masterClient.getMountPointWithPath(path);
     }catch(IOException e){
       e.printStackTrace();
       throw e;
diff --git a/core/client/src/main/java/alluxio/client/file/FileSystem.java b/core/client/src/main/java/alluxio/client/file/FileSystem.java
index 178ac98..20fe1ac 100644
--- a/core/client/src/main/java/alluxio/client/file/FileSystem.java
+++ b/core/client/src/main/java/alluxio/client/file/FileSystem.java
@@ -385,13 +385,13 @@ public interface FileSystem {
   void unmount(AlluxioURI path, UnmountOptions options) throws IOException, AlluxioException;
 
   /**
-   * Convenience method for{@link #getUfsPathWithMountTable(AlluxioURI)}
+   * Convenience method for{@link #getMountPointWithPath(AlluxioURI)}
    * @param path the path to obtain information about
    * @return the {@link MountPairInfo} of the file
    * @throws IOException if a non-alluxio exception occurs
    * @throws AlluxioException if an unexpected Alluxio exception its thrown
    */
-  MountPairInfo getUfsPathWithMountTable(AlluxioURI path) throws IOException,AlluxioException;
+  MountPairInfo getMountPointWithPath(AlluxioURI path) throws IOException,AlluxioException;
 
   /**
    * list all mount point
@@ -399,6 +399,6 @@ public interface FileSystem {
    * @throws IOException
    * @throws AlluxioException
    */
-  List<MountPairInfo> getMountTable() throws IOException, AlluxioException;
+  List<MountPairInfo> getMountPoint() throws IOException, AlluxioException;
 
 }
diff --git a/core/client/src/main/java/alluxio/client/file/FileSystemMasterClient.java b/core/client/src/main/java/alluxio/client/file/FileSystemMasterClient.java
index a64754c..4b8db32 100644
--- a/core/client/src/main/java/alluxio/client/file/FileSystemMasterClient.java
+++ b/core/client/src/main/java/alluxio/client/file/FileSystemMasterClient.java
@@ -375,12 +375,12 @@ public final class FileSystemMasterClient extends AbstractMasterClient {
    *@throws IOException if an I/O error occurs
    * @throws AlluxioException, if an Alluxio error occurs
    */
-  public synchronized MountPairInfo getUfsPathWithMountTable(final AlluxioURI path)
+  public synchronized MountPairInfo getMountPointWithPath(final AlluxioURI path)
       throws IOException, AlluxioException {
     return retryRPC(new RpcCallableThrowsAlluxioTException<MountPairInfo>() {
       @Override
       public MountPairInfo call() throws AlluxioTException, TException {
-        return ThriftUtils.fromThrift(mClient.getUfsPathWithMountTable(path.getPath()));
+        return ThriftUtils.fromThrift(mClient.getMountPointWithPath(path.getPath()));
       }
     });
   }
@@ -391,12 +391,12 @@ public final class FileSystemMasterClient extends AbstractMasterClient {
    * @throws IOException
    * @throws AlluxioException
    */
-  public synchronized List<MountPairInfo> listMountPoint() throws IOException, AlluxioException{
+  public synchronized List<MountPairInfo> getMountPoint() throws IOException, AlluxioException{
     return retryRPC(new RpcCallableThrowsAlluxioTException<List<MountPairInfo>>() {
       @Override
       public List<MountPairInfo> call() throws AlluxioTException, TException {
         List<MountPairInfo> result = new ArrayList<>();
-        for (alluxio.thrift.MountPairInfo mountPairInfo : mClient.listMountPoint()) {
+        for (alluxio.thrift.MountPairInfo mountPairInfo : mClient.getMountPoint()) {
           result.add(ThriftUtils.fromThrift(mountPairInfo));
         }
         return result;
diff --git a/core/client/src/main/java/alluxio/hadoop/AbstractFileSystemThrough.java b/core/client/src/main/java/alluxio/hadoop/AbstractFileSystemThrough.java
index 797a441..4130167 100644
--- a/core/client/src/main/java/alluxio/hadoop/AbstractFileSystemThrough.java
+++ b/core/client/src/main/java/alluxio/hadoop/AbstractFileSystemThrough.java
@@ -909,7 +909,7 @@ abstract class AbstractFileSystemThrough extends org.apache.hadoop.fs.FileSystem
 			String ufsMountPoint = null;
 
 			if(mMountPonitList == null){
-				mMountPonitList = mFileSystem.getMountTable();
+				mMountPonitList = mFileSystem.getMountPoint();
 				if(mMountPonitList == null){
 					LOG.error("MountTable without any mountPoint");
 					throw new IOException();
@@ -963,21 +963,4 @@ abstract class AbstractFileSystemThrough extends org.apache.hadoop.fs.FileSystem
 		}
 	}
 
-	public final class HdfsUfsInfo {
-		private final Path hdfsPath;
-		private final org.apache.hadoop.fs.FileSystem hdfsUfs;
-
-		public HdfsUfsInfo(String ufsPath, org.apache.hadoop.fs.FileSystem hdfsFs) {
-			hdfsPath = new Path(ufsPath);
-			hdfsUfs = hdfsFs;
-		}
-
-		public Path getHdfsPath() {
-			return hdfsPath;
-		}
-
-		public org.apache.hadoop.fs.FileSystem getHdfsUfs() {
-			return hdfsUfs;
-		}
-	}
 }
diff --git a/core/client/src/main/java/alluxio/hadoop/HdfsUfsInfo.java b/core/client/src/main/java/alluxio/hadoop/HdfsUfsInfo.java
index c335f60..f727360 100644
--- a/core/client/src/main/java/alluxio/hadoop/HdfsUfsInfo.java
+++ b/core/client/src/main/java/alluxio/hadoop/HdfsUfsInfo.java
@@ -1,7 +1,26 @@
 package alluxio.hadoop;
 
+import org.apache.hadoop.fs.Path;
+
 /**
  * Created by guoyejun on 2017/5/19.
+ * This class constructs the ufsPath and HDFS filesystem instance according to
+ * the alluxio path and mountTable
  */
-public class HdfsUfsInfo {
+public final class HdfsUfsInfo {
+	private final Path hdfsPath;
+	private final org.apache.hadoop.fs.FileSystem hdfsUfs;
+
+	public HdfsUfsInfo(String ufsPath, org.apache.hadoop.fs.FileSystem hdfsFs) {
+		hdfsPath = new Path(ufsPath);
+		hdfsUfs = hdfsFs;
+	}
+
+	public Path getHdfsPath() {
+		return hdfsPath;
+	}
+
+	public org.apache.hadoop.fs.FileSystem getHdfsUfs() {
+		return hdfsUfs;
+	}
 }
diff --git a/core/common/src/main/java/alluxio/thrift/FileSystemMasterClientService.java b/core/common/src/main/java/alluxio/thrift/FileSystemMasterClientService.java
index a3dce02..49abdeb 100644
--- a/core/common/src/main/java/alluxio/thrift/FileSystemMasterClientService.java
+++ b/core/common/src/main/java/alluxio/thrift/FileSystemMasterClientService.java
@@ -12,7 +12,6 @@ import org.apache.thrift.scheme.StandardScheme;
 
 import org.apache.thrift.scheme.TupleScheme;
 import org.apache.thrift.protocol.TTupleProtocol;
-import org.apache.thrift.protocol.TProtocolException;
 import org.apache.thrift.EncodingUtils;
 import org.apache.thrift.TException;
 import org.apache.thrift.async.AsyncMethodCallback;
@@ -22,13 +21,9 @@ import java.util.ArrayList;
 import java.util.Map;
 import java.util.HashMap;
 import java.util.EnumMap;
-import java.util.Set;
-import java.util.HashSet;
 import java.util.EnumSet;
 import java.util.Collections;
 import java.util.BitSet;
-import java.nio.ByteBuffer;
-import java.util.Arrays;
 import javax.annotation.Generated;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -209,12 +204,12 @@ public class FileSystemMasterClientService {
      * 
      * @param path the path of the directory
      */
-    public MountPairInfo getUfsPathWithMountTable(String path) throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException;
+    public MountPairInfo getMountPointWithPath(String path) throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException;
 
     /**
      * get All Mount Point
      */
-    public List<MountPairInfo> listMountPoint() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException;
+    public List<MountPairInfo> getMountPoint() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException;
 
   }
 
@@ -256,9 +251,9 @@ public class FileSystemMasterClientService {
 
     public void unmount(String alluxioPath, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;
 
-    public void getUfsPathWithMountTable(String path, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;
+    public void getMountPointWithPath(String path, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;
 
-    public void listMountPoint(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;
+    public void getMountPoint(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;
 
   }
 
@@ -752,55 +747,55 @@ public class FileSystemMasterClientService {
       return;
     }
 
-    public MountPairInfo getUfsPathWithMountTable(String path) throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
+    public MountPairInfo getMountPointWithPath(String path) throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
     {
-      send_getUfsPathWithMountTable(path);
-      return recv_getUfsPathWithMountTable();
+      send_getMountPointWithPath(path);
+      return recv_getMounitPointWithPath();
     }
 
-    public void send_getUfsPathWithMountTable(String path) throws org.apache.thrift.TException
+    public void send_getMountPointWithPath(String path) throws org.apache.thrift.TException
     {
-      getUfsPathWithMountTable_args args = new getUfsPathWithMountTable_args();
+      getMountPointWithPath_args args = new getMountPointWithPath_args();
       args.setPath(path);
-      sendBase("getUfsPathWithMountTable", args);
+      sendBase("getMountPointWithPath", args);
     }
 
-    public MountPairInfo recv_getUfsPathWithMountTable() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
+    public MountPairInfo recv_getMounitPointWithPath() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
     {
-      getUfsPathWithMountTable_result result = new getUfsPathWithMountTable_result();
-      receiveBase(result, "getUfsPathWithMountTable");
+      getMountPointWithPath_result result = new getMountPointWithPath_result();
+      receiveBase(result, "getMountPointWithPath");
       if (result.isSetSuccess()) {
         return result.success;
       }
       if (result.e != null) {
         throw result.e;
       }
-      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getUfsPathWithMountTable failed: unknown result");
+      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getMountPointWithPath failed: unknown result");
     }
 
-    public List<MountPairInfo> listMountPoint() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
+    public List<MountPairInfo> getMountPoint() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
     {
-      send_listMountPoint();
-      return recv_listMountPoint();
+      send_getMountPoint();
+      return recv_getMountPoint();
     }
 
-    public void send_listMountPoint() throws org.apache.thrift.TException
+    public void send_getMountPoint() throws org.apache.thrift.TException
     {
-      listMountPoint_args args = new listMountPoint_args();
-      sendBase("listMountPoint", args);
+      getMountPoint_args args = new getMountPoint_args();
+      sendBase("getMountPoint", args);
     }
 
-    public List<MountPairInfo> recv_listMountPoint() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
+    public List<MountPairInfo> recv_getMountPoint() throws alluxio.thrift.AlluxioTException, org.apache.thrift.TException
     {
-      listMountPoint_result result = new listMountPoint_result();
-      receiveBase(result, "listMountPoint");
+      getMountPoint_result result = new getMountPoint_result();
+      receiveBase(result, "getMountPoint");
       if (result.isSetSuccess()) {
         return result.success;
       }
       if (result.e != null) {
         throw result.e;
       }
-      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "listMountPoint failed: unknown result");
+      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getMountPoint failed: unknown result");
     }
 
   }
@@ -1430,23 +1425,23 @@ public class FileSystemMasterClientService {
       }
     }
 
-    public void getUfsPathWithMountTable(String path, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
+    public void getMountPointWithPath(String path, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
       checkReady();
-      getUfsPathWithMountTable_call method_call = new getUfsPathWithMountTable_call(path, resultHandler, this, ___protocolFactory, ___transport);
+      getMountPointWithPath_call method_call = new getMountPointWithPath_call(path, resultHandler, this, ___protocolFactory, ___transport);
       this.___currentMethod = method_call;
       ___manager.call(method_call);
     }
 
-    public static class getUfsPathWithMountTable_call extends org.apache.thrift.async.TAsyncMethodCall {
+    public static class getMountPointWithPath_call extends org.apache.thrift.async.TAsyncMethodCall {
       private String path;
-      public getUfsPathWithMountTable_call(String path, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
+      public getMountPointWithPath_call(String path, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
         super(client, protocolFactory, transport, resultHandler, false);
         this.path = path;
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
-        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getUfsPathWithMountTable", org.apache.thrift.protocol.TMessageType.CALL, 0));
-        getUfsPathWithMountTable_args args = new getUfsPathWithMountTable_args();
+        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getMountPointWithPath", org.apache.thrift.protocol.TMessageType.CALL, 0));
+        getMountPointWithPath_args args = new getMountPointWithPath_args();
         args.setPath(path);
         args.write(prot);
         prot.writeMessageEnd();
@@ -1458,25 +1453,25 @@ public class FileSystemMasterClientService {
         }
         org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
         org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
-        return (new Client(prot)).recv_getUfsPathWithMountTable();
+        return (new Client(prot)).recv_getMounitPointWithPath();
       }
     }
 
-    public void listMountPoint(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
+    public void getMountPoint(org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
       checkReady();
-      listMountPoint_call method_call = new listMountPoint_call(resultHandler, this, ___protocolFactory, ___transport);
+      getMountPoint_call method_call = new getMountPoint_call(resultHandler, this, ___protocolFactory, ___transport);
       this.___currentMethod = method_call;
       ___manager.call(method_call);
     }
 
-    public static class listMountPoint_call extends org.apache.thrift.async.TAsyncMethodCall {
-      public listMountPoint_call(org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
+    public static class getMountPoint_call extends org.apache.thrift.async.TAsyncMethodCall {
+      public getMountPoint_call(org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
         super(client, protocolFactory, transport, resultHandler, false);
       }
 
       public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
-        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("listMountPoint", org.apache.thrift.protocol.TMessageType.CALL, 0));
-        listMountPoint_args args = new listMountPoint_args();
+        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getMountPoint", org.apache.thrift.protocol.TMessageType.CALL, 0));
+        getMountPoint_args args = new getMountPoint_args();
         args.write(prot);
         prot.writeMessageEnd();
       }
@@ -1487,7 +1482,7 @@ public class FileSystemMasterClientService {
         }
         org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
         org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
-        return (new Client(prot)).recv_listMountPoint();
+        return (new Client(prot)).recv_getMountPoint();
       }
     }
 
@@ -1522,8 +1517,8 @@ public class FileSystemMasterClientService {
       processMap.put("setAttribute", new setAttribute());
       processMap.put("scheduleAsyncPersist", new scheduleAsyncPersist());
       processMap.put("unmount", new unmount());
-      processMap.put("getUfsPathWithMountTable", new getUfsPathWithMountTable());
-      processMap.put("listMountPoint", new listMountPoint());
+      processMap.put("getMountPointWithPath", new getMountPointWithPath());
+      processMap.put("getMountPoint", new getMountPoint());
       return processMap;
     }
 
@@ -1975,23 +1970,23 @@ public class FileSystemMasterClientService {
       }
     }
 
-    public static class getUfsPathWithMountTable<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getUfsPathWithMountTable_args> {
-      public getUfsPathWithMountTable() {
-        super("getUfsPathWithMountTable");
+    public static class getMountPointWithPath<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getMountPointWithPath_args> {
+      public getMountPointWithPath() {
+        super("getMountPointWithPath");
       }
 
-      public getUfsPathWithMountTable_args getEmptyArgsInstance() {
-        return new getUfsPathWithMountTable_args();
+      public getMountPointWithPath_args getEmptyArgsInstance() {
+        return new getMountPointWithPath_args();
       }
 
       protected boolean isOneway() {
         return false;
       }
 
-      public getUfsPathWithMountTable_result getResult(I iface, getUfsPathWithMountTable_args args) throws org.apache.thrift.TException {
-        getUfsPathWithMountTable_result result = new getUfsPathWithMountTable_result();
+      public getMountPointWithPath_result getResult(I iface, getMountPointWithPath_args args) throws org.apache.thrift.TException {
+        getMountPointWithPath_result result = new getMountPointWithPath_result();
         try {
-          result.success = iface.getUfsPathWithMountTable(args.path);
+          result.success = iface.getMountPointWithPath(args.path);
         } catch (alluxio.thrift.AlluxioTException e) {
           result.e = e;
         }
@@ -1999,23 +1994,23 @@ public class FileSystemMasterClientService {
       }
     }
 
-    public static class listMountPoint<I extends Iface> extends org.apache.thrift.ProcessFunction<I, listMountPoint_args> {
-      public listMountPoint() {
-        super("listMountPoint");
+    public static class getMountPoint<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getMountPoint_args> {
+      public getMountPoint() {
+        super("getMountPoint");
       }
 
-      public listMountPoint_args getEmptyArgsInstance() {
-        return new listMountPoint_args();
+      public getMountPoint_args getEmptyArgsInstance() {
+        return new getMountPoint_args();
       }
 
       protected boolean isOneway() {
         return false;
       }
 
-      public listMountPoint_result getResult(I iface, listMountPoint_args args) throws org.apache.thrift.TException {
-        listMountPoint_result result = new listMountPoint_result();
+      public getMountPoint_result getResult(I iface, getMountPoint_args args) throws org.apache.thrift.TException {
+        getMountPoint_result result = new getMountPoint_result();
         try {
-          result.success = iface.listMountPoint();
+          result.success = iface.getMountPoint();
         } catch (alluxio.thrift.AlluxioTException e) {
           result.e = e;
         }
@@ -2054,8 +2049,8 @@ public class FileSystemMasterClientService {
       processMap.put("setAttribute", new setAttribute());
       processMap.put("scheduleAsyncPersist", new scheduleAsyncPersist());
       processMap.put("unmount", new unmount());
-      processMap.put("getUfsPathWithMountTable", new getUfsPathWithMountTable());
-      processMap.put("listMountPoint", new listMountPoint());
+      processMap.put("getMountPointWithPath", new getMountPointWithPath());
+      processMap.put("getMountPoint", new getMountPoint());
       return processMap;
     }
 
@@ -3112,20 +3107,20 @@ public class FileSystemMasterClientService {
       }
     }
 
-    public static class getUfsPathWithMountTable<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getUfsPathWithMountTable_args, MountPairInfo> {
-      public getUfsPathWithMountTable() {
-        super("getUfsPathWithMountTable");
+    public static class getMountPointWithPath<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getMountPointWithPath_args, MountPairInfo> {
+      public getMountPointWithPath() {
+        super("getMountPointWithPath");
       }
 
-      public getUfsPathWithMountTable_args getEmptyArgsInstance() {
-        return new getUfsPathWithMountTable_args();
+      public getMountPointWithPath_args getEmptyArgsInstance() {
+        return new getMountPointWithPath_args();
       }
 
       public AsyncMethodCallback<MountPairInfo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
         final org.apache.thrift.AsyncProcessFunction fcall = this;
         return new AsyncMethodCallback<MountPairInfo>() { 
           public void onComplete(MountPairInfo o) {
-            getUfsPathWithMountTable_result result = new getUfsPathWithMountTable_result();
+            getMountPointWithPath_result result = new getMountPointWithPath_result();
             result.success = o;
             try {
               fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
@@ -3138,7 +3133,7 @@ public class FileSystemMasterClientService {
           public void onError(Exception e) {
             byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
             org.apache.thrift.TBase msg;
-            getUfsPathWithMountTable_result result = new getUfsPathWithMountTable_result();
+            getMountPointWithPath_result result = new getMountPointWithPath_result();
             if (e instanceof alluxio.thrift.AlluxioTException) {
                         result.e = (alluxio.thrift.AlluxioTException) e;
                         result.setEIsSet(true);
@@ -3164,25 +3159,25 @@ public class FileSystemMasterClientService {
         return false;
       }
 
-      public void start(I iface, getUfsPathWithMountTable_args args, org.apache.thrift.async.AsyncMethodCallback<MountPairInfo> resultHandler) throws TException {
-        iface.getUfsPathWithMountTable(args.path,resultHandler);
+      public void start(I iface, getMountPointWithPath_args args, org.apache.thrift.async.AsyncMethodCallback<MountPairInfo> resultHandler) throws TException {
+        iface.getMountPointWithPath(args.path,resultHandler);
       }
     }
 
-    public static class listMountPoint<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, listMountPoint_args, List<MountPairInfo>> {
-      public listMountPoint() {
-        super("listMountPoint");
+    public static class getMountPoint<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getMountPoint_args, List<MountPairInfo>> {
+      public getMountPoint() {
+        super("getMountPoint");
       }
 
-      public listMountPoint_args getEmptyArgsInstance() {
-        return new listMountPoint_args();
+      public getMountPoint_args getEmptyArgsInstance() {
+        return new getMountPoint_args();
       }
 
       public AsyncMethodCallback<List<MountPairInfo>> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
         final org.apache.thrift.AsyncProcessFunction fcall = this;
         return new AsyncMethodCallback<List<MountPairInfo>>() { 
           public void onComplete(List<MountPairInfo> o) {
-            listMountPoint_result result = new listMountPoint_result();
+            getMountPoint_result result = new getMountPoint_result();
             result.success = o;
             try {
               fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
@@ -3195,7 +3190,7 @@ public class FileSystemMasterClientService {
           public void onError(Exception e) {
             byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
             org.apache.thrift.TBase msg;
-            listMountPoint_result result = new listMountPoint_result();
+            getMountPoint_result result = new getMountPoint_result();
             if (e instanceof alluxio.thrift.AlluxioTException) {
                         result.e = (alluxio.thrift.AlluxioTException) e;
                         result.setEIsSet(true);
@@ -3221,8 +3216,8 @@ public class FileSystemMasterClientService {
         return false;
       }
 
-      public void start(I iface, listMountPoint_args args, org.apache.thrift.async.AsyncMethodCallback<List<MountPairInfo>> resultHandler) throws TException {
-        iface.listMountPoint(resultHandler);
+      public void start(I iface, getMountPoint_args args, org.apache.thrift.async.AsyncMethodCallback<List<MountPairInfo>> resultHandler) throws TException {
+        iface.getMountPoint(resultHandler);
       }
     }
 
@@ -19538,15 +19533,15 @@ public class FileSystemMasterClientService {
 
   }
 
-  public static class getUfsPathWithMountTable_args implements org.apache.thrift.TBase<getUfsPathWithMountTable_args, getUfsPathWithMountTable_args._Fields>, java.io.Serializable, Cloneable, Comparable<getUfsPathWithMountTable_args>   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getUfsPathWithMountTable_args");
+  public static class getMountPointWithPath_args implements org.apache.thrift.TBase<getMountPointWithPath_args, getMountPointWithPath_args._Fields>, java.io.Serializable, Cloneable, Comparable<getMountPointWithPath_args>   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMountPointWithPath_args");
 
     private static final org.apache.thrift.protocol.TField PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("path", org.apache.thrift.protocol.TType.STRING, (short)1);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new getUfsPathWithMountTable_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new getUfsPathWithMountTable_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new getMountPointWithPath_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new getMountPointWithPath_argsTupleSchemeFactory());
     }
 
     /**
@@ -19622,13 +19617,13 @@ public class FileSystemMasterClientService {
       tmpMap.put(_Fields.PATH, new org.apache.thrift.meta_data.FieldMetaData("path", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getUfsPathWithMountTable_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMountPointWithPath_args.class, metaDataMap);
     }
 
-    public getUfsPathWithMountTable_args() {
+    public getMountPointWithPath_args() {
     }
 
-    public getUfsPathWithMountTable_args(
+    public getMountPointWithPath_args(
       String path)
     {
       this();
@@ -19638,14 +19633,14 @@ public class FileSystemMasterClientService {
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public getUfsPathWithMountTable_args(getUfsPathWithMountTable_args other) {
+    public getMountPointWithPath_args(getMountPointWithPath_args other) {
       if (other.isSetPath()) {
         this.path = other.path;
       }
     }
 
-    public getUfsPathWithMountTable_args deepCopy() {
-      return new getUfsPathWithMountTable_args(this);
+    public getMountPointWithPath_args deepCopy() {
+      return new getMountPointWithPath_args(this);
     }
 
     @Override
@@ -19663,7 +19658,7 @@ public class FileSystemMasterClientService {
     /**
      * the path of the directory
      */
-    public getUfsPathWithMountTable_args setPath(String path) {
+    public getMountPointWithPath_args setPath(String path) {
       this.path = path;
       return this;
     }
@@ -19722,12 +19717,12 @@ public class FileSystemMasterClientService {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof getUfsPathWithMountTable_args)
-        return this.equals((getUfsPathWithMountTable_args)that);
+      if (that instanceof getMountPointWithPath_args)
+        return this.equals((getMountPointWithPath_args)that);
       return false;
     }
 
-    public boolean equals(getUfsPathWithMountTable_args that) {
+    public boolean equals(getMountPointWithPath_args that) {
       if (that == null)
         return false;
 
@@ -19756,7 +19751,7 @@ public class FileSystemMasterClientService {
     }
 
     @Override
-    public int compareTo(getUfsPathWithMountTable_args other) {
+    public int compareTo(getMountPointWithPath_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
@@ -19790,7 +19785,7 @@ public class FileSystemMasterClientService {
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("getUfsPathWithMountTable_args(");
+      StringBuilder sb = new StringBuilder("getMountPointWithPath_args(");
       boolean first = true;
 
       sb.append("path:");
@@ -19825,15 +19820,15 @@ public class FileSystemMasterClientService {
       }
     }
 
-    private static class getUfsPathWithMountTable_argsStandardSchemeFactory implements SchemeFactory {
-      public getUfsPathWithMountTable_argsStandardScheme getScheme() {
-        return new getUfsPathWithMountTable_argsStandardScheme();
+    private static class getMountPointWithPath_argsStandardSchemeFactory implements SchemeFactory {
+      public getMountPointWithPath_argsStandardScheme getScheme() {
+        return new getMountPointWithPath_argsStandardScheme();
       }
     }
 
-    private static class getUfsPathWithMountTable_argsStandardScheme extends StandardScheme<getUfsPathWithMountTable_args> {
+    private static class getMountPointWithPath_argsStandardScheme extends StandardScheme<getMountPointWithPath_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, getUfsPathWithMountTable_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, getMountPointWithPath_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -19862,7 +19857,7 @@ public class FileSystemMasterClientService {
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, getUfsPathWithMountTable_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, getMountPointWithPath_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -19877,16 +19872,16 @@ public class FileSystemMasterClientService {
 
     }
 
-    private static class getUfsPathWithMountTable_argsTupleSchemeFactory implements SchemeFactory {
-      public getUfsPathWithMountTable_argsTupleScheme getScheme() {
-        return new getUfsPathWithMountTable_argsTupleScheme();
+    private static class getMountPointWithPath_argsTupleSchemeFactory implements SchemeFactory {
+      public getMountPointWithPath_argsTupleScheme getScheme() {
+        return new getMountPointWithPath_argsTupleScheme();
       }
     }
 
-    private static class getUfsPathWithMountTable_argsTupleScheme extends TupleScheme<getUfsPathWithMountTable_args> {
+    private static class getMountPointWithPath_argsTupleScheme extends TupleScheme<getMountPointWithPath_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, getUfsPathWithMountTable_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, getMountPointWithPath_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetPath()) {
@@ -19899,7 +19894,7 @@ public class FileSystemMasterClientService {
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, getUfsPathWithMountTable_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, getMountPointWithPath_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(1);
         if (incoming.get(0)) {
@@ -19911,16 +19906,16 @@ public class FileSystemMasterClientService {
 
   }
 
-  public static class getUfsPathWithMountTable_result implements org.apache.thrift.TBase<getUfsPathWithMountTable_result, getUfsPathWithMountTable_result._Fields>, java.io.Serializable, Cloneable, Comparable<getUfsPathWithMountTable_result>   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getUfsPathWithMountTable_result");
+  public static class getMountPointWithPath_result implements org.apache.thrift.TBase<getMountPointWithPath_result, getMountPointWithPath_result._Fields>, java.io.Serializable, Cloneable, Comparable<getMountPointWithPath_result>   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMountPointWithPath_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
     private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new getUfsPathWithMountTable_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new getUfsPathWithMountTable_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new getMountPointWithPath_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new getMountPointWithPath_resultTupleSchemeFactory());
     }
 
     public MountPairInfo success; // required
@@ -19996,13 +19991,13 @@ public class FileSystemMasterClientService {
       tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getUfsPathWithMountTable_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMountPointWithPath_result.class, metaDataMap);
     }
 
-    public getUfsPathWithMountTable_result() {
+    public getMountPointWithPath_result() {
     }
 
-    public getUfsPathWithMountTable_result(
+    public getMountPointWithPath_result(
       MountPairInfo success,
       alluxio.thrift.AlluxioTException e)
     {
@@ -20014,7 +20009,7 @@ public class FileSystemMasterClientService {
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public getUfsPathWithMountTable_result(getUfsPathWithMountTable_result other) {
+    public getMountPointWithPath_result(getMountPointWithPath_result other) {
       if (other.isSetSuccess()) {
         this.success = new MountPairInfo(other.success);
       }
@@ -20023,8 +20018,8 @@ public class FileSystemMasterClientService {
       }
     }
 
-    public getUfsPathWithMountTable_result deepCopy() {
-      return new getUfsPathWithMountTable_result(this);
+    public getMountPointWithPath_result deepCopy() {
+      return new getMountPointWithPath_result(this);
     }
 
     @Override
@@ -20037,7 +20032,7 @@ public class FileSystemMasterClientService {
       return this.success;
     }
 
-    public getUfsPathWithMountTable_result setSuccess(MountPairInfo success) {
+    public getMountPointWithPath_result setSuccess(MountPairInfo success) {
       this.success = success;
       return this;
     }
@@ -20061,7 +20056,7 @@ public class FileSystemMasterClientService {
       return this.e;
     }
 
-    public getUfsPathWithMountTable_result setE(alluxio.thrift.AlluxioTException e) {
+    public getMountPointWithPath_result setE(alluxio.thrift.AlluxioTException e) {
       this.e = e;
       return this;
     }
@@ -20133,12 +20128,12 @@ public class FileSystemMasterClientService {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof getUfsPathWithMountTable_result)
-        return this.equals((getUfsPathWithMountTable_result)that);
+      if (that instanceof getMountPointWithPath_result)
+        return this.equals((getMountPointWithPath_result)that);
       return false;
     }
 
-    public boolean equals(getUfsPathWithMountTable_result that) {
+    public boolean equals(getMountPointWithPath_result that) {
       if (that == null)
         return false;
 
@@ -20181,7 +20176,7 @@ public class FileSystemMasterClientService {
     }
 
     @Override
-    public int compareTo(getUfsPathWithMountTable_result other) {
+    public int compareTo(getMountPointWithPath_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
@@ -20225,7 +20220,7 @@ public class FileSystemMasterClientService {
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("getUfsPathWithMountTable_result(");
+      StringBuilder sb = new StringBuilder("getMountPointWithPath_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -20271,15 +20266,15 @@ public class FileSystemMasterClientService {
       }
     }
 
-    private static class getUfsPathWithMountTable_resultStandardSchemeFactory implements SchemeFactory {
-      public getUfsPathWithMountTable_resultStandardScheme getScheme() {
-        return new getUfsPathWithMountTable_resultStandardScheme();
+    private static class getMountPointWithPath_resultStandardSchemeFactory implements SchemeFactory {
+      public getMountPointWithPath_resultStandardScheme getScheme() {
+        return new getMountPointWithPath_resultStandardScheme();
       }
     }
 
-    private static class getUfsPathWithMountTable_resultStandardScheme extends StandardScheme<getUfsPathWithMountTable_result> {
+    private static class getMountPointWithPath_resultStandardScheme extends StandardScheme<getMountPointWithPath_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, getUfsPathWithMountTable_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, getMountPointWithPath_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -20318,7 +20313,7 @@ public class FileSystemMasterClientService {
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, getUfsPathWithMountTable_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, getMountPointWithPath_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -20338,16 +20333,16 @@ public class FileSystemMasterClientService {
 
     }
 
-    private static class getUfsPathWithMountTable_resultTupleSchemeFactory implements SchemeFactory {
-      public getUfsPathWithMountTable_resultTupleScheme getScheme() {
-        return new getUfsPathWithMountTable_resultTupleScheme();
+    private static class getMountPointWithPath_resultTupleSchemeFactory implements SchemeFactory {
+      public getMountPointWithPath_resultTupleScheme getScheme() {
+        return new getMountPointWithPath_resultTupleScheme();
       }
     }
 
-    private static class getUfsPathWithMountTable_resultTupleScheme extends TupleScheme<getUfsPathWithMountTable_result> {
+    private static class getMountPointWithPath_resultTupleScheme extends TupleScheme<getMountPointWithPath_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, getUfsPathWithMountTable_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, getMountPointWithPath_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -20366,7 +20361,7 @@ public class FileSystemMasterClientService {
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, getUfsPathWithMountTable_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, getMountPointWithPath_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(2);
         if (incoming.get(0)) {
@@ -20384,14 +20379,14 @@ public class FileSystemMasterClientService {
 
   }
 
-  public static class listMountPoint_args implements org.apache.thrift.TBase<listMountPoint_args, listMountPoint_args._Fields>, java.io.Serializable, Cloneable, Comparable<listMountPoint_args>   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("listMountPoint_args");
+  public static class getMountPoint_args implements org.apache.thrift.TBase<getMountPoint_args, getMountPoint_args._Fields>, java.io.Serializable, Cloneable, Comparable<getMountPoint_args>   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMountPoint_args");
 
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new listMountPoint_argsStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new listMountPoint_argsTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new getMountPoint_argsStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new getMountPoint_argsTupleSchemeFactory());
     }
 
 
@@ -20454,20 +20449,20 @@ public class FileSystemMasterClientService {
     static {
       Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(listMountPoint_args.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMountPoint_args.class, metaDataMap);
     }
 
-    public listMountPoint_args() {
+    public getMountPoint_args() {
     }
 
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public listMountPoint_args(listMountPoint_args other) {
+    public getMountPoint_args(getMountPoint_args other) {
     }
 
-    public listMountPoint_args deepCopy() {
-      return new listMountPoint_args(this);
+    public getMountPoint_args deepCopy() {
+      return new getMountPoint_args(this);
     }
 
     @Override
@@ -20500,12 +20495,12 @@ public class FileSystemMasterClientService {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof listMountPoint_args)
-        return this.equals((listMountPoint_args)that);
+      if (that instanceof getMountPoint_args)
+        return this.equals((getMountPoint_args)that);
       return false;
     }
 
-    public boolean equals(listMountPoint_args that) {
+    public boolean equals(getMountPoint_args that) {
       if (that == null)
         return false;
 
@@ -20520,7 +20515,7 @@ public class FileSystemMasterClientService {
     }
 
     @Override
-    public int compareTo(listMountPoint_args other) {
+    public int compareTo(getMountPoint_args other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
@@ -20544,7 +20539,7 @@ public class FileSystemMasterClientService {
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("listMountPoint_args(");
+      StringBuilder sb = new StringBuilder("getMountPoint_args(");
       boolean first = true;
 
       sb.append(")");
@@ -20572,15 +20567,15 @@ public class FileSystemMasterClientService {
       }
     }
 
-    private static class listMountPoint_argsStandardSchemeFactory implements SchemeFactory {
-      public listMountPoint_argsStandardScheme getScheme() {
-        return new listMountPoint_argsStandardScheme();
+    private static class getMountPoint_argsStandardSchemeFactory implements SchemeFactory {
+      public getMountPoint_argsStandardScheme getScheme() {
+        return new getMountPoint_argsStandardScheme();
       }
     }
 
-    private static class listMountPoint_argsStandardScheme extends StandardScheme<listMountPoint_args> {
+    private static class getMountPoint_argsStandardScheme extends StandardScheme<getMountPoint_args> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, listMountPoint_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, getMountPoint_args struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -20601,7 +20596,7 @@ public class FileSystemMasterClientService {
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, listMountPoint_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, getMountPoint_args struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -20611,37 +20606,37 @@ public class FileSystemMasterClientService {
 
     }
 
-    private static class listMountPoint_argsTupleSchemeFactory implements SchemeFactory {
-      public listMountPoint_argsTupleScheme getScheme() {
-        return new listMountPoint_argsTupleScheme();
+    private static class getMountPoint_argsTupleSchemeFactory implements SchemeFactory {
+      public getMountPoint_argsTupleScheme getScheme() {
+        return new getMountPoint_argsTupleScheme();
       }
     }
 
-    private static class listMountPoint_argsTupleScheme extends TupleScheme<listMountPoint_args> {
+    private static class getMountPoint_argsTupleScheme extends TupleScheme<getMountPoint_args> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, listMountPoint_args struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, getMountPoint_args struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, listMountPoint_args struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, getMountPoint_args struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
       }
     }
 
   }
 
-  public static class listMountPoint_result implements org.apache.thrift.TBase<listMountPoint_result, listMountPoint_result._Fields>, java.io.Serializable, Cloneable, Comparable<listMountPoint_result>   {
-    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("listMountPoint_result");
+  public static class getMountPoint_result implements org.apache.thrift.TBase<getMountPoint_result, getMountPoint_result._Fields>, java.io.Serializable, Cloneable, Comparable<getMountPoint_result>   {
+    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getMountPoint_result");
 
     private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.LIST, (short)0);
     private static final org.apache.thrift.protocol.TField E_FIELD_DESC = new org.apache.thrift.protocol.TField("e", org.apache.thrift.protocol.TType.STRUCT, (short)1);
 
     private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
     static {
-      schemes.put(StandardScheme.class, new listMountPoint_resultStandardSchemeFactory());
-      schemes.put(TupleScheme.class, new listMountPoint_resultTupleSchemeFactory());
+      schemes.put(StandardScheme.class, new getMountPoint_resultStandardSchemeFactory());
+      schemes.put(TupleScheme.class, new getMountPoint_resultTupleSchemeFactory());
     }
 
     public List<MountPairInfo> success; // required
@@ -20718,13 +20713,13 @@ public class FileSystemMasterClientService {
       tmpMap.put(_Fields.E, new org.apache.thrift.meta_data.FieldMetaData("e", org.apache.thrift.TFieldRequirementType.DEFAULT, 
           new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
       metaDataMap = Collections.unmodifiableMap(tmpMap);
-      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(listMountPoint_result.class, metaDataMap);
+      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getMountPoint_result.class, metaDataMap);
     }
 
-    public listMountPoint_result() {
+    public getMountPoint_result() {
     }
 
-    public listMountPoint_result(
+    public getMountPoint_result(
       List<MountPairInfo> success,
       alluxio.thrift.AlluxioTException e)
     {
@@ -20736,7 +20731,7 @@ public class FileSystemMasterClientService {
     /**
      * Performs a deep copy on <i>other</i>.
      */
-    public listMountPoint_result(listMountPoint_result other) {
+    public getMountPoint_result(getMountPoint_result other) {
       if (other.isSetSuccess()) {
         List<MountPairInfo> __this__success = new ArrayList<MountPairInfo>(other.success.size());
         for (MountPairInfo other_element : other.success) {
@@ -20749,8 +20744,8 @@ public class FileSystemMasterClientService {
       }
     }
 
-    public listMountPoint_result deepCopy() {
-      return new listMountPoint_result(this);
+    public getMountPoint_result deepCopy() {
+      return new getMountPoint_result(this);
     }
 
     @Override
@@ -20778,7 +20773,7 @@ public class FileSystemMasterClientService {
       return this.success;
     }
 
-    public listMountPoint_result setSuccess(List<MountPairInfo> success) {
+    public getMountPoint_result setSuccess(List<MountPairInfo> success) {
       this.success = success;
       return this;
     }
@@ -20802,7 +20797,7 @@ public class FileSystemMasterClientService {
       return this.e;
     }
 
-    public listMountPoint_result setE(alluxio.thrift.AlluxioTException e) {
+    public getMountPoint_result setE(alluxio.thrift.AlluxioTException e) {
       this.e = e;
       return this;
     }
@@ -20874,12 +20869,12 @@ public class FileSystemMasterClientService {
     public boolean equals(Object that) {
       if (that == null)
         return false;
-      if (that instanceof listMountPoint_result)
-        return this.equals((listMountPoint_result)that);
+      if (that instanceof getMountPoint_result)
+        return this.equals((getMountPoint_result)that);
       return false;
     }
 
-    public boolean equals(listMountPoint_result that) {
+    public boolean equals(getMountPoint_result that) {
       if (that == null)
         return false;
 
@@ -20922,7 +20917,7 @@ public class FileSystemMasterClientService {
     }
 
     @Override
-    public int compareTo(listMountPoint_result other) {
+    public int compareTo(getMountPoint_result other) {
       if (!getClass().equals(other.getClass())) {
         return getClass().getName().compareTo(other.getClass().getName());
       }
@@ -20966,7 +20961,7 @@ public class FileSystemMasterClientService {
 
     @Override
     public String toString() {
-      StringBuilder sb = new StringBuilder("listMountPoint_result(");
+      StringBuilder sb = new StringBuilder("getMountPoint_result(");
       boolean first = true;
 
       sb.append("success:");
@@ -21009,15 +21004,15 @@ public class FileSystemMasterClientService {
       }
     }
 
-    private static class listMountPoint_resultStandardSchemeFactory implements SchemeFactory {
-      public listMountPoint_resultStandardScheme getScheme() {
-        return new listMountPoint_resultStandardScheme();
+    private static class getMountPoint_resultStandardSchemeFactory implements SchemeFactory {
+      public getMountPoint_resultStandardScheme getScheme() {
+        return new getMountPoint_resultStandardScheme();
       }
     }
 
-    private static class listMountPoint_resultStandardScheme extends StandardScheme<listMountPoint_result> {
+    private static class getMountPoint_resultStandardScheme extends StandardScheme<getMountPoint_result> {
 
-      public void read(org.apache.thrift.protocol.TProtocol iprot, listMountPoint_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol iprot, getMountPoint_result struct) throws org.apache.thrift.TException {
         org.apache.thrift.protocol.TField schemeField;
         iprot.readStructBegin();
         while (true)
@@ -21066,7 +21061,7 @@ public class FileSystemMasterClientService {
         struct.validate();
       }
 
-      public void write(org.apache.thrift.protocol.TProtocol oprot, listMountPoint_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol oprot, getMountPoint_result struct) throws org.apache.thrift.TException {
         struct.validate();
 
         oprot.writeStructBegin(STRUCT_DESC);
@@ -21093,16 +21088,16 @@ public class FileSystemMasterClientService {
 
     }
 
-    private static class listMountPoint_resultTupleSchemeFactory implements SchemeFactory {
-      public listMountPoint_resultTupleScheme getScheme() {
-        return new listMountPoint_resultTupleScheme();
+    private static class getMountPoint_resultTupleSchemeFactory implements SchemeFactory {
+      public getMountPoint_resultTupleScheme getScheme() {
+        return new getMountPoint_resultTupleScheme();
       }
     }
 
-    private static class listMountPoint_resultTupleScheme extends TupleScheme<listMountPoint_result> {
+    private static class getMountPoint_resultTupleScheme extends TupleScheme<getMountPoint_result> {
 
       @Override
-      public void write(org.apache.thrift.protocol.TProtocol prot, listMountPoint_result struct) throws org.apache.thrift.TException {
+      public void write(org.apache.thrift.protocol.TProtocol prot, getMountPoint_result struct) throws org.apache.thrift.TException {
         TTupleProtocol oprot = (TTupleProtocol) prot;
         BitSet optionals = new BitSet();
         if (struct.isSetSuccess()) {
@@ -21127,7 +21122,7 @@ public class FileSystemMasterClientService {
       }
 
       @Override
-      public void read(org.apache.thrift.protocol.TProtocol prot, listMountPoint_result struct) throws org.apache.thrift.TException {
+      public void read(org.apache.thrift.protocol.TProtocol prot, getMountPoint_result struct) throws org.apache.thrift.TException {
         TTupleProtocol iprot = (TTupleProtocol) prot;
         BitSet incoming = iprot.readBitSet(2);
         if (incoming.get(0)) {
diff --git a/core/common/src/thrift/file_system_master.thrift b/core/common/src/thrift/file_system_master.thrift
index addc726..da5177a 100644
--- a/core/common/src/thrift/file_system_master.thrift
+++ b/core/common/src/thrift/file_system_master.thrift
@@ -290,14 +290,14 @@ service FileSystemMasterClientService extends common.AlluxioService {
   /**
   * Returns the mount pair info of diectory
   */
-  MountPairInfo getUfsPathWithMountTable(
+  MountPairInfo getMountPointWithPath(
     /** the path of the directory*/ 1: string path
     )throws(1: exception.AlluxioTException e)
 
     /**
     *get All Mount Point
     */
-    list<MountPairInfo> listMountPoint(
+    list<MountPairInfo> getMountPoint(
      )throws(1:exception.AlluxioTException e)
 
 }
diff --git a/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java b/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java
index 1fe8a46..cd4b8a5 100644
--- a/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java
+++ b/core/server/src/main/java/alluxio/master/file/FileSystemMaster.java
@@ -2609,7 +2609,7 @@ public final class FileSystemMaster extends AbstractMaster {
    * @throws InvalidPathException if the file path is not valid
    * @throws AccessControlException if the permission checking fails
    */
-  public MountPairInfo getUfsPathWithMountTable(AlluxioURI path)
+  public MountPairInfo getMountPointWithPath(AlluxioURI path)
       throws InvalidPathException,AccessControlException {
     MountPairInfo mountPairInfo = new MountPairInfo();
     try (LockedInodePath inodePath = mInodeTree.lockInodePath(path, InodeTree.LockMode.READ)){
@@ -2624,7 +2624,7 @@ public final class FileSystemMaster extends AbstractMaster {
     return mountPairInfo;
   }
 
-  public List<MountPairInfo> listMountPoint() throws AlluxioException{
+  public List<MountPairInfo> getMountPoint() throws AlluxioException{
     List<MountPairInfo> result = new ArrayList<>();
     for(Map.Entry<String, MountInfo> entry: mMountTable.getMountTable().entrySet()){
       // System.out.println("Mount Table Info: "+ entry.getKey().toString()+ ", "+ entry.getValue().getUfsUri().toString());
diff --git a/core/server/src/main/java/alluxio/master/file/FileSystemMasterClientServiceHandler.java b/core/server/src/main/java/alluxio/master/file/FileSystemMasterClientServiceHandler.java
index 450f7e8..531682c 100644
--- a/core/server/src/main/java/alluxio/master/file/FileSystemMasterClientServiceHandler.java
+++ b/core/server/src/main/java/alluxio/master/file/FileSystemMasterClientServiceHandler.java
@@ -206,12 +206,12 @@ public final class FileSystemMasterClientServiceHandler implements
   }
 
   @Override
-  public List<MountPairInfo> listMountPoint() throws AlluxioTException{
+  public List<MountPairInfo> getMountPoint() throws AlluxioTException{
     return RpcUtils.call(new RpcCallable<List<MountPairInfo>>() {
       @Override
       public List<MountPairInfo> call() throws AlluxioException {
         List<MountPairInfo> result = new ArrayList<>();
-        for(alluxio.wire.MountPairInfo mountPairInfo: mFileSystemMaster.listMountPoint()){
+        for(alluxio.wire.MountPairInfo mountPairInfo: mFileSystemMaster.getMountPoint()){
           result.add(ThriftUtils.toThrift(mountPairInfo));
         }
         return result;
@@ -310,11 +310,11 @@ public final class FileSystemMasterClientServiceHandler implements
   }
 
   @Override
-  public MountPairInfo getUfsPathWithMountTable(final String path) throws AlluxioTException {
+  public MountPairInfo getMountPointWithPath(final String path) throws AlluxioTException {
     return RpcUtils.call(new RpcCallable<MountPairInfo>() {
       @Override
       public MountPairInfo call() throws AlluxioException {
-        return ThriftUtils.toThrift(mFileSystemMaster.getUfsPathWithMountTable(new AlluxioURI(path)));
+        return ThriftUtils.toThrift(mFileSystemMaster.getMountPointWithPath(new AlluxioURI(path)));
       }
     });
   }
diff --git a/shell/src/main/java/alluxio/shell/command/ListMountPoint.java b/shell/src/main/java/alluxio/shell/command/ListMountPoint.java
index c19849c..069d214 100644
--- a/shell/src/main/java/alluxio/shell/command/ListMountPoint.java
+++ b/shell/src/main/java/alluxio/shell/command/ListMountPoint.java
@@ -20,8 +20,8 @@ public final class ListMountPoint extends AbstractShellCommand{
    * @throws AlluxioException
    * @throws IOException
    */
-  public void listMountPoint() throws AlluxioException,IOException{
-    for(MountPairInfo mountPairInfo: mFileSystem.getMountTable()){
+  public void ListMountPoint() throws AlluxioException,IOException{
+    for(MountPairInfo mountPairInfo: mFileSystem.getMountPoint()){
       System.out.println(mountPairInfo.getAlluxioPath() + " -> " + mountPairInfo.getUfsPath());
     }
   }
@@ -32,12 +32,12 @@ public final class ListMountPoint extends AbstractShellCommand{
 
   @Override
   public void run(CommandLine cl) throws AlluxioException, IOException{
-    listMountPoint();
+    ListMountPoint();
   }
 
   @Override
   public String getCommandName(){
-    return "getMountTable";
+    return "listMountPoint";
   }
 
   @Override
@@ -47,6 +47,6 @@ public final class ListMountPoint extends AbstractShellCommand{
 
   @Override
   public String getUsage(){
-    return "getMountTable";
+    return "listMountPoint";
   }
 }
